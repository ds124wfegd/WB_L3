
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: notification-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - notification-network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: notification-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      notification-network:
        aliases:
          - localhost

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=production
    volumes:
       - ./config/:/root/config/
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - notification-network

volumes:
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  notification-network:
    driver: bridge