version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: url-shortener-postgres
    environment:
      POSTGRES_DB: url_shortener
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - url-shortener-network

  redis:
    image: redis:7-alpine
    container_name: url-shortener-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - url-shortener-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: url-shortener-service
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=production
    volumes:
       - ./config/:/root/config/
       - ./internal/web/templates:/app/internal/web/templates:ro
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - url-shortener-network

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  url-shortener-network:
    driver: bridge